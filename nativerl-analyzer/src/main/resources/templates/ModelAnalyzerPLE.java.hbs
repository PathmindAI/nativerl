{{#if packageName}}package {{packageName}};{{/if}}
import com.anylogic.engine.Engine;
import pathmind.policyhelper.PathmindHelper;

import java.util.*;
import java.util.stream.*;
{{#if simulationClassName}}import {{simulationClassName}};{{/if}}

public class ModelAnalyzer {
    private static String display(String[] theStrings) {
        return Stream.of(theStrings).collect(Collectors.joining("|"));
    }
    public static void main(String[] args) throws Throwable {
        List<String> failedSteps = new ArrayList<>();

        RLExperiment exp = new RLExperiment();

        // Create new agent object:
        {{agentClassName}} agent;
        try {
            //agent = new {{agentClassName}}(engine, null, null);
            agent = exp.createModel();
        }
        catch(RuntimeException e) {
            if (e.getCause() instanceof ClassNotFoundException) {
                System.out.println("oldVersionFound:true");
                System.exit(0);
                return;
            }
            else {
                e.printStackTrace(System.out);
                System.exit(1);
                return;
            }
        }

        agent.setParametersToDefaultValues();
        Engine engine = agent.getEngine();

        try {
            engine.start(agent);
        } catch (Throwable ex) {
            ex.printStackTrace(System.out);
            failedSteps.add("startEngine");
        }

        PathmindHelper helper = agent.pathmindHelper;

        try {
            System.out.println("observations:" + helper.observationForTraining().length);
            System.out.println("observationNames:" + display(helper.getObservationNames()));
            System.out.println("observationTypes:" + display(helper.getObservationTypes()));
        } catch (Throwable ex) {
             System.out.println("Cannot get obs:");
             ex.printStackTrace(System.out);
             failedSteps.add("observations");
             System.out.println("observations:" + 0);
             System.out.println("observationsNames:");
        }

        // actions is here just to keep backward compatibility. When we remove support from webapp, we can remove it.
        System.out.println("actions:" + helper.getPossibleActionCount());
        System.out.println("rewardVariablesCount:" + helper.observationForReward().length);
        System.out.println("rewardVariableNames:" + display(helper.getRewardVariableNames()));
        System.out.println("rewardVariableTypes:" + display(helper.getRewardVariableTypes()));

        // check number of agent
        System.out.println("agents:" + helper.numberOfAgents);
        System.out.println("model-analyzer-mode:" + (helper.numberOfAgents > 1 ? "multi" : "single"));

        try {
            if (helper.isEnabled) {
                System.out.println("isEnabled:true");
            } else {
                System.out.println("isEnabled:false");
                failedSteps.add("pathmindHelperDisabled");
            }
        } catch (Throwable ex) {
            System.out.println("Cannot get isEnabled:");
            ex.printStackTrace(System.out);
            failedSteps.add("pathmindHelperDisabled");
        }

        System.out.println("reward: not defined");
        System.out.println("failedSteps:" + String.join(",", failedSteps));

        System.exit(0);
    }
}
