// Generated by JavaCPP version 1.5.1-SNAPSHOT: DO NOT EDIT THIS FILE

#include <jni.h>
#include "../nativerl.h"

#ifdef __cplusplus
extern "C" {
#endif
JNIIMPORT int JavaCPP_init(int argc, const char *argv[]);
JNIIMPORT int JavaCPP_uninit();

JNIIMPORT nativerl::Environment* createEnvironment(const char* arg0);
JNIIMPORT nativerl::Environment* createEnvironment1(const char* arg0);
JNIIMPORT nativerl::Environment* createEnvironment2(const char* arg0);
JNIIMPORT nativerl::Environment* createEnvironment3(const char* arg0);
JNIIMPORT nativerl::Environment* createEnvironment4(const char* arg0);
JNIIMPORT nativerl::Environment* createEnvironment5(const char* arg0);
JNIIMPORT nativerl::Environment* createEnvironment6(const char* arg0);
JNIIMPORT nativerl::Environment* createEnvironment7(const char* arg0);
JNIIMPORT nativerl::Environment* createEnvironment8(const char* arg0);
JNIIMPORT nativerl::Environment* createEnvironment9(const char* arg0);
JNIIMPORT void releaseEnvironment(nativerl::Environment* arg0);
JNIIMPORT void releaseEnvironment1(nativerl::Environment* arg0);
JNIIMPORT void releaseEnvironment2(nativerl::Environment* arg0);
JNIIMPORT void releaseEnvironment3(nativerl::Environment* arg0);
JNIIMPORT void releaseEnvironment4(nativerl::Environment* arg0);
JNIIMPORT void releaseEnvironment5(nativerl::Environment* arg0);
JNIIMPORT void releaseEnvironment6(nativerl::Environment* arg0);
JNIIMPORT void releaseEnvironment7(nativerl::Environment* arg0);
JNIIMPORT void releaseEnvironment8(nativerl::Environment* arg0);
JNIIMPORT void releaseEnvironment9(nativerl::Environment* arg0);
#ifdef __cplusplus
}
#endif
