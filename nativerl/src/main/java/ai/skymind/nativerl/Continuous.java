// Targeted by JavaCPP version 1.5.4: DO NOT EDIT THIS FILE

package ai.skymind.nativerl;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static ai.skymind.nativerl.NativeRL.*;


/**
 * Describes a continuous space for both state and action spaces. Includes low and high
 * values for all elements, as well as the shape of the Array required by the Environment.
 */
@Namespace("nativerl") @NoOffset @Properties(inherit = ai.skymind.nativerl.NativeRLPresets.class)
public class Continuous extends Space {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public Continuous(Pointer p) { super(p); }

    public native @ByRef FloatVector low(); public native Continuous low(FloatVector setter);
    public native @ByRef FloatVector high(); public native Continuous high(FloatVector setter);
    public native @ByRef SSizeTVector shape(); public native Continuous shape(SSizeTVector setter);

    public Continuous(@Const @ByRef FloatVector low,
                   @Const @ByRef FloatVector high,
                   @Const @ByRef SSizeTVector shape) { super((Pointer)null); allocate(low, high, shape); }
    private native void allocate(@Const @ByRef FloatVector low,
                   @Const @ByRef FloatVector high,
                   @Const @ByRef SSizeTVector shape);
}
