/*
 * This file is generated by jOOQ.
 */
package ai.skymind.skynet.data.db.jooq;


import ai.skymind.skynet.data.db.jooq.tables.Databasechangeloglock;
import ai.skymind.skynet.data.db.jooq.tables.Mdp;
import ai.skymind.skynet.data.db.jooq.tables.Model;
import ai.skymind.skynet.data.db.jooq.tables.Policy;
import ai.skymind.skynet.data.db.jooq.tables.Project;
import ai.skymind.skynet.data.db.jooq.tables.Run;
import ai.skymind.skynet.data.db.jooq.tables.User;
import ai.skymind.skynet.data.db.jooq.tables.records.DatabasechangeloglockRecord;
import ai.skymind.skynet.data.db.jooq.tables.records.MdpRecord;
import ai.skymind.skynet.data.db.jooq.tables.records.ModelRecord;
import ai.skymind.skynet.data.db.jooq.tables.records.PolicyRecord;
import ai.skymind.skynet.data.db.jooq.tables.records.ProjectRecord;
import ai.skymind.skynet.data.db.jooq.tables.records.RunRecord;
import ai.skymind.skynet.data.db.jooq.tables.records.UserRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<MdpRecord, Integer> IDENTITY_MDP = Identities0.IDENTITY_MDP;
    public static final Identity<ModelRecord, Integer> IDENTITY_MODEL = Identities0.IDENTITY_MODEL;
    public static final Identity<PolicyRecord, Integer> IDENTITY_POLICY = Identities0.IDENTITY_POLICY;
    public static final Identity<ProjectRecord, Integer> IDENTITY_PROJECT = Identities0.IDENTITY_PROJECT;
    public static final Identity<RunRecord, Integer> IDENTITY_RUN = Identities0.IDENTITY_RUN;
    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = UniqueKeys0.DATABASECHANGELOGLOCK_PKEY;
    public static final UniqueKey<MdpRecord> MDP_PKEY = UniqueKeys0.MDP_PKEY;
    public static final UniqueKey<ModelRecord> MODEL_PKEY = UniqueKeys0.MODEL_PKEY;
    public static final UniqueKey<PolicyRecord> POLICY_PKEY = UniqueKeys0.POLICY_PKEY;
    public static final UniqueKey<ProjectRecord> PROJECT_PKEY = UniqueKeys0.PROJECT_PKEY;
    public static final UniqueKey<RunRecord> RUN_PKEY = UniqueKeys0.RUN_PKEY;
    public static final UniqueKey<UserRecord> USER_PKEY = UniqueKeys0.USER_PKEY;
    public static final UniqueKey<UserRecord> USER_EMAIL_KEY = UniqueKeys0.USER_EMAIL_KEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<MdpRecord, UserRecord> MDP__MDP_OWNER = ForeignKeys0.MDP__MDP_OWNER;
    public static final ForeignKey<MdpRecord, ModelRecord> MDP__MDP_FOR_MODEL = ForeignKeys0.MDP__MDP_FOR_MODEL;
    public static final ForeignKey<ModelRecord, UserRecord> MODEL__MODEL_OWNER = ForeignKeys0.MODEL__MODEL_OWNER;
    public static final ForeignKey<ModelRecord, UserRecord> MODEL__MODEL_PROJECT = ForeignKeys0.MODEL__MODEL_PROJECT;
    public static final ForeignKey<PolicyRecord, UserRecord> POLICY__POLICYOWNER = ForeignKeys0.POLICY__POLICYOWNER;
    public static final ForeignKey<PolicyRecord, ModelRecord> POLICY__POLICY_MODEL = ForeignKeys0.POLICY__POLICY_MODEL;
    public static final ForeignKey<PolicyRecord, MdpRecord> POLICY__POLICY_MDP = ForeignKeys0.POLICY__POLICY_MDP;
    public static final ForeignKey<PolicyRecord, RunRecord> POLICY__POLICY_CREATED_BY_RUN = ForeignKeys0.POLICY__POLICY_CREATED_BY_RUN;
    public static final ForeignKey<ProjectRecord, UserRecord> PROJECT__PROJECT_OWNER = ForeignKeys0.PROJECT__PROJECT_OWNER;
    public static final ForeignKey<RunRecord, UserRecord> RUN__RUN_OWNER = ForeignKeys0.RUN__RUN_OWNER;
    public static final ForeignKey<RunRecord, ModelRecord> RUN__RUN_MODEL = ForeignKeys0.RUN__RUN_MODEL;
    public static final ForeignKey<RunRecord, MdpRecord> RUN__RUN_MDP = ForeignKeys0.RUN__RUN_MDP;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<MdpRecord, Integer> IDENTITY_MDP = Internal.createIdentity(Mdp.MDP, Mdp.MDP.ID);
        public static Identity<ModelRecord, Integer> IDENTITY_MODEL = Internal.createIdentity(Model.MODEL, Model.MODEL.ID);
        public static Identity<PolicyRecord, Integer> IDENTITY_POLICY = Internal.createIdentity(Policy.POLICY, Policy.POLICY.ID);
        public static Identity<ProjectRecord, Integer> IDENTITY_PROJECT = Internal.createIdentity(Project.PROJECT, Project.PROJECT.ID);
        public static Identity<RunRecord, Integer> IDENTITY_RUN = Internal.createIdentity(Run.RUN, Run.RUN.ID);
        public static Identity<UserRecord, Integer> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, "databasechangeloglock_pkey", Databasechangeloglock.DATABASECHANGELOGLOCK.ID);
        public static final UniqueKey<MdpRecord> MDP_PKEY = Internal.createUniqueKey(Mdp.MDP, "mdp_pkey", Mdp.MDP.ID);
        public static final UniqueKey<ModelRecord> MODEL_PKEY = Internal.createUniqueKey(Model.MODEL, "model_pkey", Model.MODEL.ID);
        public static final UniqueKey<PolicyRecord> POLICY_PKEY = Internal.createUniqueKey(Policy.POLICY, "policy_pkey", Policy.POLICY.ID);
        public static final UniqueKey<ProjectRecord> PROJECT_PKEY = Internal.createUniqueKey(Project.PROJECT, "project_pkey", Project.PROJECT.ID);
        public static final UniqueKey<RunRecord> RUN_PKEY = Internal.createUniqueKey(Run.RUN, "run_pkey", Run.RUN.ID);
        public static final UniqueKey<UserRecord> USER_PKEY = Internal.createUniqueKey(User.USER, "user_pkey", User.USER.ID);
        public static final UniqueKey<UserRecord> USER_EMAIL_KEY = Internal.createUniqueKey(User.USER, "user_email_key", User.USER.EMAIL);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<MdpRecord, UserRecord> MDP__MDP_OWNER = Internal.createForeignKey(ai.skymind.skynet.data.db.jooq.Keys.USER_PKEY, Mdp.MDP, "mdp__mdp_owner", Mdp.MDP.USER_ID);
        public static final ForeignKey<MdpRecord, ModelRecord> MDP__MDP_FOR_MODEL = Internal.createForeignKey(ai.skymind.skynet.data.db.jooq.Keys.MODEL_PKEY, Mdp.MDP, "mdp__mdp_for_model", Mdp.MDP.MODEL_ID);
        public static final ForeignKey<ModelRecord, UserRecord> MODEL__MODEL_OWNER = Internal.createForeignKey(ai.skymind.skynet.data.db.jooq.Keys.USER_PKEY, Model.MODEL, "model__model_owner", Model.MODEL.USER_ID);
        public static final ForeignKey<ModelRecord, UserRecord> MODEL__MODEL_PROJECT = Internal.createForeignKey(ai.skymind.skynet.data.db.jooq.Keys.USER_PKEY, Model.MODEL, "model__model_project", Model.MODEL.PROJECT_ID);
        public static final ForeignKey<PolicyRecord, UserRecord> POLICY__POLICYOWNER = Internal.createForeignKey(ai.skymind.skynet.data.db.jooq.Keys.USER_PKEY, Policy.POLICY, "policy__policyOwner", Policy.POLICY.USER_ID);
        public static final ForeignKey<PolicyRecord, ModelRecord> POLICY__POLICY_MODEL = Internal.createForeignKey(ai.skymind.skynet.data.db.jooq.Keys.MODEL_PKEY, Policy.POLICY, "policy__policy_model", Policy.POLICY.MODEL_ID);
        public static final ForeignKey<PolicyRecord, MdpRecord> POLICY__POLICY_MDP = Internal.createForeignKey(ai.skymind.skynet.data.db.jooq.Keys.MDP_PKEY, Policy.POLICY, "policy__policy_mdp", Policy.POLICY.MDP_ID);
        public static final ForeignKey<PolicyRecord, RunRecord> POLICY__POLICY_CREATED_BY_RUN = Internal.createForeignKey(ai.skymind.skynet.data.db.jooq.Keys.RUN_PKEY, Policy.POLICY, "policy__policy_created_by_run", Policy.POLICY.RUN_ID);
        public static final ForeignKey<ProjectRecord, UserRecord> PROJECT__PROJECT_OWNER = Internal.createForeignKey(ai.skymind.skynet.data.db.jooq.Keys.USER_PKEY, Project.PROJECT, "project__project_owner", Project.PROJECT.USER_ID);
        public static final ForeignKey<RunRecord, UserRecord> RUN__RUN_OWNER = Internal.createForeignKey(ai.skymind.skynet.data.db.jooq.Keys.USER_PKEY, Run.RUN, "run__run_owner", Run.RUN.USER_ID);
        public static final ForeignKey<RunRecord, ModelRecord> RUN__RUN_MODEL = Internal.createForeignKey(ai.skymind.skynet.data.db.jooq.Keys.MODEL_PKEY, Run.RUN, "run__run_model", Run.RUN.MODEL_ID);
        public static final ForeignKey<RunRecord, MdpRecord> RUN__RUN_MDP = Internal.createForeignKey(ai.skymind.skynet.data.db.jooq.Keys.MDP_PKEY, Run.RUN, "run__run_mdp", Run.RUN.MDP_ID);
    }
}
